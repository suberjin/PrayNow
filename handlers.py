from aiogram import Bot, Router, F, Dispatcher
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
import logging
from services import insert_prayer, fetch_prayers, update_prayer, delete_prayer, get_prayer_by_id

# Get logger
logger = logging.getLogger(__name__)

# Create router instance
router = Router()

# Define the PrayerStates class
class PrayerStates(StatesGroup):
    expecting_prayer = State()

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
async def show_main_menu(message_or_callback):
    from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text='–ù–∞–¥—ñ—Å–ª–∞—Ç–∏ –º–æ–ª–∏—Ç–≤—É', callback_data='send_pray')],
        [InlineKeyboardButton(text='–ü–æ–∫–∞–∑–∞—Ç–∏ –º–æ—ó –º–æ–ª–∏—Ç–≤–∏', callback_data='show_my_prayers')]
    ])
    
    if isinstance(message_or_callback, Message):
        await message_or_callback.answer("–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é:", reply_markup=keyboard)
    else:  # CallbackQuery
        await message_or_callback.message.answer("–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é:", reply_markup=keyboard)
        await message_or_callback.answer()

@router.message(Command("start"))
async def start_handler(message: Message):
    from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text='–ù–∞–¥—ñ—Å–ª–∞—Ç–∏ –º–æ–ª–∏—Ç–≤—É', callback_data='send_pray')],
        [InlineKeyboardButton(text='–ü–æ–∫–∞–∑–∞—Ç–∏ –º–æ—ó –º–æ–ª–∏—Ç–≤–∏', callback_data='show_my_prayers')]
    ])
    await message.answer("–í—ñ—Ç–∞—é! –Ø –±–æ—Ç –¥–ª—è –∑–∞–ø–∏—Å—É –≤–∞—à–∏—Ö –º–æ–ª–∏—Ç–æ–≤.", reply_markup=keyboard)

@router.callback_query(F.data == "main_menu")
async def main_menu_callback(callback_query: CallbackQuery, state: FSMContext):
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –µ—Å–ª–∏ –æ–Ω–æ –µ—Å—Ç—å
    await state.clear()
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    await show_main_menu(callback_query)

@router.callback_query(F.data == "send_pray")
async def process_callback_send_pray(callback_query: CallbackQuery, state: FSMContext):
    from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
    
    user_id = callback_query.from_user.id
    await callback_query.answer(show_alert=False)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text='üè† –î–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é', callback_data='main_menu')]
    ])
    
    await callback_query.message.answer("–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –≤–∞—à—É –º–æ–ª–∏—Ç–≤—É:", reply_markup=keyboard)
    await state.set_state(PrayerStates.expecting_prayer)
    logger.info('State set to expecting_prayer')

@router.message(PrayerStates.expecting_prayer)
async def capture_prayer(message: Message, state: FSMContext):
    from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
    
    user_id = message.from_user.id
    username = message.from_user.username or 'unknown'
    prayer_text = message.text

    # Check if we're editing an existing prayer
    state_data = await state.get_data()
    if 'edit_prayer_id' in state_data:
        prayer_id = state_data['edit_prayer_id']
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –º–æ–ª–∏—Ç–≤—É –≤ –ë–î
        update_prayer(prayer_id, prayer_text)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text='üè† –î–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é', callback_data='main_menu')]
        ])
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–º, —á—Ç–æ –±—ã–ª–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ
        await message.answer(
            f"‚úÖ <b>–ú–æ–ª–∏—Ç–≤—É –æ–Ω–æ–≤–ª–µ–Ω–æ!</b>",
            reply_markup=keyboard
        )
    else:
        insert_prayer(user_id, username, prayer_text)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text='üè† –î–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é', callback_data='main_menu')]
        ])
        
        await message.answer("‚úÖ –ú–æ–ª–∏—Ç–≤—É –∑–∞–ø–∏—Å–∞–Ω–æ.", reply_markup=keyboard)

    await state.clear()

@router.message(Command("my_prayers"))
async def my_prayers(message: Message):
    from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
    
    user_id = message.from_user.id
    logger.info('Fetching prayers for user_id: %s', user_id)
    prayers = fetch_prayers(user_id)
    
    if not prayers:
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text='üè† –î–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é', callback_data='main_menu')]
        ])
        
        await message.answer('–£ –≤–∞—Å –Ω–µ–º–∞—î –∑–∞–ø–∏—Å–∞–Ω–∏—Ö –º–æ–ª–∏—Ç–æ–≤.', reply_markup=keyboard)
        return

    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –º–æ–ª–∏—Ç–≤—ã
    for prayer_id, prayer_text in prayers:
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [
                InlineKeyboardButton(text='–†–µ–¥–∞–≥—É–≤–∞—Ç–∏', callback_data=f'edit_{prayer_id}'),
                InlineKeyboardButton(text='–í–∏–¥–∞–ª–∏—Ç–∏', callback_data=f'delete_{prayer_id}')
            ]
        ])
        await message.answer(prayer_text, reply_markup=keyboard)
    
    # –û—Ç–¥–µ–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text='üè† –î–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é', callback_data='main_menu')]
    ])
    await message.answer('‚¨ÜÔ∏è –í–∞—à—ñ –º–æ–ª–∏—Ç–≤–∏ ‚¨ÜÔ∏è', reply_markup=keyboard)

@router.callback_query(F.data.startswith(('edit_', 'delete_')))
async def prayer_callback(callback_query: CallbackQuery, state: FSMContext):
    from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
    
    await callback_query.answer(show_alert=False)
    data = callback_query.data

    if data.startswith('edit_'):
        prayer_id = int(data.split('_')[1])
        original_text = get_prayer_by_id(prayer_id)
        if original_text:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–ª–∏–Ω—É –º–æ–ª–∏—Ç–≤—ã –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
            if len(original_text) > 3000:
                # –ú–æ–ª–∏—Ç–≤–∞ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–∞—è –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤ Telegram
                # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∏ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é
                keyboard = InlineKeyboardMarkup(inline_keyboard=[
                    [
                        InlineKeyboardButton(text='–í–∏–¥–∞–ª–∏—Ç–∏ —Ü—é –º–æ–ª–∏—Ç–≤—É', callback_data=f'delete_{prayer_id}'),
                        InlineKeyboardButton(text='–°–∫–∞—Å—É–≤–∞—Ç–∏', callback_data='cancel_edit')
                    ],
                    [InlineKeyboardButton(text='üè† –î–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é', callback_data='main_menu')]
                ])
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                await callback_query.message.answer(
                    text=f"‚ö†Ô∏è <b>–¶—è –º–æ–ª–∏—Ç–≤–∞ –∑–∞–Ω–∞–¥—Ç–æ –¥–æ–≤–≥–∞ –¥–ª—è —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è</b>\n\n"
                         f"–ß–µ—Ä–µ–∑ –æ–±–º–µ–∂–µ–Ω–Ω—è Telegram, –¥—É–∂–µ –¥–æ–≤–≥—ñ –º–æ–ª–∏—Ç–≤–∏ –Ω–µ–º–æ–∂–ª–∏–≤–æ —Ä–µ–¥–∞–≥—É–≤–∞—Ç–∏.\n"
                         f"–í–∏ –º–æ–∂–µ—Ç–µ –≤–∏–¥–∞–ª–∏—Ç–∏ —Ü—é –º–æ–ª–∏—Ç–≤—É —Ç–∞ —Å—Ç–≤–æ—Ä–∏—Ç–∏ –Ω–æ–≤—É –∑–∞–º—ñ—Å—Ç—å –Ω–µ—ó.",
                    reply_markup=keyboard
                )
            else:
                # –ú–æ–ª–∏—Ç–≤–∞ –ø–æ–¥—Ö–æ–¥—è—â–µ–π –¥–ª–∏–Ω—ã –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
                # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π –æ—Ç–º–µ–Ω—ã –∏ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é
                keyboard = InlineKeyboardMarkup(inline_keyboard=[
                    [InlineKeyboardButton(text='–°–∫–∞—Å—É–≤–∞—Ç–∏', callback_data='cancel_edit')],
                    [InlineKeyboardButton(text='üè† –î–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é', callback_data='main_menu')]
                ])
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–µ–∫—É—â–∏–º —Ç–µ–∫—Å—Ç–æ–º –∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–µ–π
                await callback_query.message.answer(
                    text=f"‚úèÔ∏è <b>–†–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –º–æ–ª–∏—Ç–≤–∏:</b>\n\n"
                         f"{original_text}\n\n"
                         f"<i>–ë—É–¥—å –ª–∞—Å–∫–∞, –Ω–∞–¥—ñ—à–ª—ñ—Ç—å –Ω–æ–≤–∏–π —Ç–µ–∫—Å—Ç –º–æ–ª–∏—Ç–≤–∏ –∞–±–æ –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å –°–∫–∞—Å—É–≤–∞—Ç–∏.</i>",
                    reply_markup=keyboard
                )
                
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –º–æ–ª–∏—Ç–≤—ã –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
                await state.update_data(edit_prayer_id=prayer_id, original_text=original_text)
                await state.set_state(PrayerStates.expecting_prayer)
        else:
            # –ú–æ–ª–∏—Ç–≤–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞
            keyboard = InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text='üè† –î–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é', callback_data='main_menu')]
            ])
            
            await callback_query.message.answer(
                text='–í–∏–±–∞—á—Ç–µ, –º–æ–ª–∏—Ç–≤—É –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.',
                reply_markup=keyboard
            )

    elif data.startswith('delete_'):
        prayer_id = int(data.split('_')[1])
        delete_prayer(prayer_id)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text='üè† –î–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é', callback_data='main_menu')]
        ])
        
        await callback_query.message.answer(
            text='–ú–æ–ª–∏—Ç–≤—É –≤–∏–¥–∞–ª–µ–Ω–æ.',
            reply_markup=keyboard
        )

@router.callback_query(F.data == "cancel_edit")
async def cancel_edit(callback_query: CallbackQuery, state: FSMContext):
    from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
    
    await state.clear()
    await callback_query.answer("–†–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è —Å–∫–∞—Å–æ–≤–∞–Ω–æ", show_alert=True)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text='üè† –î–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é', callback_data='main_menu')]
    ])
    
    await callback_query.message.answer(
        "–†–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –º–æ–ª–∏—Ç–≤–∏ —Å–∫–∞—Å–æ–≤–∞–Ω–æ.",
        reply_markup=keyboard
    )

@router.callback_query(F.data == "show_my_prayers")
async def show_my_prayers(callback_query: CallbackQuery):
    from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
    
    user_id = callback_query.from_user.id
    logger.info('Fetching prayers for user_id: %s', user_id)
    prayers = fetch_prayers(user_id)
    
    if not prayers:
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text='üè† –î–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é', callback_data='main_menu')]
        ])
        
        await callback_query.message.answer(
            '–£ –≤–∞—Å –Ω–µ–º–∞—î –∑–∞–ø–∏—Å–∞–Ω–∏—Ö –º–æ–ª–∏—Ç–æ–≤.',
            reply_markup=keyboard
        )
        return

    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –º–æ–ª–∏—Ç–≤—ã
    for prayer_id, prayer_text in prayers:
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [
                InlineKeyboardButton(text='–†–µ–¥–∞–≥—É–≤–∞—Ç–∏', callback_data=f'edit_{prayer_id}'),
                InlineKeyboardButton(text='–í–∏–¥–∞–ª–∏—Ç–∏', callback_data=f'delete_{prayer_id}')
            ]
        ])
        await callback_query.message.answer(prayer_text, reply_markup=keyboard)
    
    # –û—Ç–¥–µ–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text='üè† –î–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é', callback_data='main_menu')]
    ])
    await callback_query.message.answer('‚¨ÜÔ∏è –í–∞—à—ñ –º–æ–ª–∏—Ç–≤–∏ ‚¨ÜÔ∏è', reply_markup=keyboard)

    await callback_query.answer(show_alert=False)

def register_handlers(dp: Dispatcher):
    # Include the router in the dispatcher
    dp.include_router(router)
